initSidebarItems({"constant":[["COMPACT_NOTE_SIZE","The size of a compact note."],["ENC_CIPHERTEXT_SIZE","The size of an encrypted note plaintext."],["NOTE_PLAINTEXT_SIZE","The size of [`NotePlaintextBytes`]."],["OUT_CIPHERTEXT_SIZE","The size of an encrypted outgoing plaintext."],["OUT_PLAINTEXT_SIZE","The size of [`OutPlaintextBytes`]."]],"fn":[["try_compact_note_decryption","Trial decryption of the compact note plaintext by the recipient for light clients."],["try_note_decryption","Trial decryption of the full note plaintext by the recipient."],["try_output_recovery_with_ock","Recovery of the full note plaintext by the sender."],["try_output_recovery_with_ovk","Recovery of the full note plaintext by the sender."]],"mod":[["batch","APIs for batch trial decryption."]],"struct":[["EphemeralKeyBytes","Newtype representing the byte encoding of an `EphemeralPublicKey`."],["NoteEncryption","A struct containing context required for encrypting Sapling and Orchard notes."],["NotePlaintextBytes","Newtype representing the byte encoding of a note plaintext."],["OutPlaintextBytes","Newtype representing the byte encoding of a outgoing plaintext."],["OutgoingCipherKey","A symmetric key that can be used to recover a single Sapling or Orchard output."]],"trait":[["BatchDomain","Trait that encapsulates protocol-specific batch trial decryption logic."],["Domain","Trait that encapsulates protocol-specific note encryption types and logic."],["ShieldedOutput","Trait that provides access to the components of an encrypted transaction output."]]});